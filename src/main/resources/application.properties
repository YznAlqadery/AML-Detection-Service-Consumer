# =============== Kafka Configuration ===============

# Kafka broker address
spring.kafka.bootstrap-servers=localhost:9092

# Consumer group ID
spring.kafka.consumer.group-id=transaction-consumer-group

# Key and value deserializers
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate deserializer to handle JSON payloads
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# The target class to deserialize into
spring.kafka.consumer.properties.spring.json.value.default.type=com.yzn.transaction_consumer.model.Transaction

# Trust all packages for deserialization (or limit to yours if you want stricter security)
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Optional: disables the use of __TypeId__ header in Kafka (which may cause deserialization issues if class doesn't match)
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# Automatically reset offset to earliest for new consumers
spring.kafka.consumer.auto-offset-reset=earliest


# =============== Logging ===============
# Optional: set logging level (adjust as needed)
logging.level.org.springframework.kafka=INFO
logging.level.com.yzn.transaction_consumer=DEBUG


# =============== Other Spring Boot Settings (Optional) ===============
# Spring application name
spring.application.name=transaction-consumer

# Server port (if your app exposes a REST API)
server.port=8081

memgraph.uri=bolt://localhost:7687
memgraph.username=
memgraph.password=
